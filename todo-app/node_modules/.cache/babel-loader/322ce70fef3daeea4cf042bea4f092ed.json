{"ast":null,"code":"var _jsxFileName = \"/Users/harshgrover/Desktop/react-with-spring/todo-app/src/components/todo/TodoComponent.jsx\";\nimport React, { Component } from 'react';\nimport moment from 'moment';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\n\nclass TodoComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: 1,\n      description: 'Learn forms now',\n      targetDate: moment(new Date()).format('YYYY-MM-DD')\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  onSubmit(values) {\n    console.log(values);\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.description) {\n      errors.description = 'Enter a description';\n    } else if (values.description.length < 5) {\n      errors.description = \"Enter atleast 5 character in description\";\n    }\n\n    if (!moment(values.targetDate).isValid) {\n      errors.targetDate = \"Enter a valid target date\";\n    }\n\n    return errors;\n  }\n\n  render() {\n    let description = this.state.description;\n    let targetDate = this.state.targetDate;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, \"todo\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        description,\n        targetDate\n      },\n      onSubmit: this.onSubmit,\n      validate: this.validate,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, props => /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"description\",\n      component: \"div\",\n      class: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"targetDate\",\n      component: \"div\",\n      class: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    }, \"Description\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"text\",\n      name: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"fieldset\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 41\n      }\n    }, \"Target Date\"), /*#__PURE__*/React.createElement(Field, {\n      className: \"form-control\",\n      type: \"date\",\n      name: \"targetDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }\n    }, \"Save\")))));\n  }\n\n}\n\nexport default TodoComponent;","map":{"version":3,"sources":["/Users/harshgrover/Desktop/react-with-spring/todo-app/src/components/todo/TodoComponent.jsx"],"names":["React","Component","moment","Formik","Form","Field","ErrorMessage","TodoComponent","constructor","props","state","id","description","targetDate","Date","format","onSubmit","bind","validate","values","console","log","errors","length","isValid","render"],"mappings":"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","sourcesContent":["import React, {Component} from'react';\nimport moment from 'moment';\nimport {Formik, Form, Field, ErrorMessage} from 'formik';\n\nclass TodoComponent extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            id : 1,\n            description : 'Learn forms now',\n            targetDate : moment(new Date()).format('YYYY-MM-DD')\n        }\n        this.onSubmit = this.onSubmit.bind(this)\n        this.validate = this.validate.bind(this)\n    }\n    onSubmit(values){\n        console.log(values)\n    }\n    validate(values){\n        let errors= {}\n        if(!values.description){\n            errors.description = 'Enter a description'\n        } else if(values.description.length<5){\n            errors.description = \"Enter atleast 5 character in description\"\n        }\n\n        if(!moment(values.targetDate).isValid){\n            errors.targetDate = \"Enter a valid target date\"\n        }\n\n        return errors;\n    }\n    render(){\n\n        let description = this.state.description;\n        let targetDate = this.state.targetDate;\n        return(\n            <div>\n                <h1>todo</h1>\n                <div className=\"container\">\n                    <Formik\n                        initialValues={{ description,targetDate}}\n                        onSubmit={this.onSubmit}\n                        validate={this.validate}\n                    >\n                        {\n                            (props) => (\n                                <Form>\n                                    <ErrorMessage name=\"description\" component=\"div\" class=\"alert alert-warning\"/>\n                                    <ErrorMessage name=\"targetDate\" component=\"div\" class=\"alert alert-warning\"/>\n                                    <fieldset className=\"form-group\">\n                                        <label>Description</label>\n                                        <Field className=\"form-control\" type=\"text\" name=\"description\"/>\n                                    </fieldset>\n                                    <fieldset className=\"form-group\">\n                                        <label>Target Date</label>\n                                        <Field className=\"form-control\" type=\"date\" name=\"targetDate\"/>\n                                    </fieldset>\n                                    <button type=\"submit\" className=\"btn btn-success\">Save</button>\n                                </Form>\n                            )\n                        }\n                    </Formik>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TodoComponent;"]},"metadata":{},"sourceType":"module"}