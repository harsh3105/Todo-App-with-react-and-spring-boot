{"ast":null,"code":"var _jsxFileName = \"/Users/harshgrover/Desktop/react-with-spring/todo-app/src/components/todo/TodoApp.jsx\";\nimport React, { Component } from 'react';\n\nclass TodoApp extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"TodoApp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(LoginComponent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'harsh',\n      password: '',\n      hasLoginFailed: false,\n      showSuccess: false\n    }; // this.handlerUsernameChange = this.handlerUsernameChange.bind(this);\n    // this.handlerPasswordChange = this.handlerPasswordChange.bind(this);\n\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    //harsh,harsh\n    if (this.state.username === \"harsh\" && this.state.password === \"harsh\") {\n      console.log(\"s\");\n      this.setState({\n        showSuccess: true\n      });\n      this.setState({\n        hasLoginFailed: false\n      });\n    } else {\n      console.log(\"f\");\n      this.setState({\n        showSuccess: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    } //console.log(this.state);\n\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(ShowInvalidCredendtails, {\n      hasLoginFailed: this.state.hasLoginFailed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 16\n      }\n    }), /*#__PURE__*/React.createElement(ShowLoginSuccessMessage, {\n      showSuccess: this.state.showSuccess,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 16\n      }\n    }), this.state.hasLoginFailed && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 46\n      }\n    }, \"Invalid Credentials\"), this.state.showSuccess && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 43\n      }\n    }, \"Login Successfully\"), \"Username: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 27\n      }\n    }), \"Password: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 27\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.loginClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \"Login\"));\n  }\n\n}\n\nfunction ShowInvalidCredendtails(props) {\n  if (props.hasLoginFailed) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 16\n      }\n    }, \"Invalid Credentials\");\n  }\n\n  return null;\n}\n\nfunction ShowLoginSuccessMessage(props) {\n  if (props.showSuccess) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 16\n      }\n    }, \"Login Successfully\");\n  }\n\n  return null;\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/harshgrover/Desktop/react-with-spring/todo-app/src/components/todo/TodoApp.jsx"],"names":["React","Component","TodoApp","render","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccess","handleChange","bind","loginClicked","event","setState","target","name","value","console","log","ShowInvalidCredendtails","ShowLoginSuccessMessage"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\n\n\nclass TodoApp extends Component{\n    render(){\n        return (\n            <div className=\"TodoApp\">\n                <LoginComponent/>\n            </div>\n        )\n    }\n}\n\nclass LoginComponent extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            username : 'harsh',\n            password : '',\n            hasLoginFailed  : false,\n            showSuccess : false\n        }\n\n        // this.handlerUsernameChange = this.handlerUsernameChange.bind(this);\n        // this.handlerPasswordChange = this.handlerPasswordChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.loginClicked = this.loginClicked.bind(this);\n    }\n\n    handleChange(event){\n        this.setState(\n            {\n                [event.target.name] : event.target.value \n            }\n        )\n    }\n\n    loginClicked(){\n        //harsh,harsh\n        if(this.state.username===\"harsh\" && this.state.password===\"harsh\"){\n            console.log(\"s\");\n            this.setState({showSuccess:true})\n            this.setState({hasLoginFailed:false})\n        }\n        else{\n            console.log(\"f\");\n            this.setState({showSuccess:false})\n            this.setState({hasLoginFailed:true})\n        }\n        //console.log(this.state);\n    }\n\n    render(){\n        return(\n           <div>\n               <ShowInvalidCredendtails hasLoginFailed={this.state.hasLoginFailed}/>\n               <ShowLoginSuccessMessage showSuccess={this.state.showSuccess}/>\n               {this.state.hasLoginFailed && <div>Invalid Credentials</div>}\n               {this.state.showSuccess && <div>Login Successfully</div>}\n                Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n                Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                <button onClick={this.loginClicked}>Login</button>\n           </div>\n        );\n    }\n}\nfunction ShowInvalidCredendtails(props){\n    if(props.hasLoginFailed){\n        return <div>Invalid Credentials</div>\n    }\n    return null;\n}\nfunction ShowLoginSuccessMessage(props){\n    if(props.showSuccess){\n        return <div>Login Successfully</div>\n    }\n    return null;\n}\nexport default TodoApp;"]},"metadata":{},"sourceType":"module"}