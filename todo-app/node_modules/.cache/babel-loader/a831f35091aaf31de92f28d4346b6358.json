{"ast":null,"code":"var _jsxFileName = \"/Users/harshgrover/Desktop/react-with-spring/todo-app/src/components/todo/LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport AuthenticationService from './AuthenticationService';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'harsh',\n      password: '',\n      hasLoginFailed: false,\n      showSuccess: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    //harsh,harsh\n    // if(this.state.username===\"harsh\" && this.state.password===\"harsh\"){\n    //     this.props.history.push(`/welcome/${this.state.username}`)\n    //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password);\n    //     console.log(\"s\");\n    // }\n    // else{\n    //     console.log(\"f\");\n    //     this.setState({showSuccess:false})\n    //     this.setState({hasLoginFailed:true})\n    // }\n    AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password).then(() => {\n      this.props.history.push(`/welcome/${this.state.username}`);\n      AuthenticationService.registerSuccessfulLogin(this.state.username, this.state.password);\n    }).catch(() => {\n      this.setState({\n        showSuccess: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }\n    }, this.state.hasLoginFailed && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 51\n      }\n    }, \"Invalid Credentials\"), \"Username: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      value: this.state.username,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 31\n      }\n    }), \"Password: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 31\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-success\",\n      onClick: this.loginClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Login\")));\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["/Users/harshgrover/Desktop/react-with-spring/todo-app/src/components/todo/LoginComponent.jsx"],"names":["React","Component","AuthenticationService","LoginComponent","constructor","props","state","username","password","hasLoginFailed","showSuccess","handleChange","bind","loginClicked","event","setState","target","name","value","executeBasicAuthenticationService","then","history","push","registerSuccessfulLogin","catch","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;;AAEA,MAAMC,cAAN,SAA6BF,SAA7B,CAAsC;AAClCG,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAG,OADF;AAETC,MAAAA,QAAQ,EAAG,EAFF;AAGTC,MAAAA,cAAc,EAAI,KAHT;AAITC,MAAAA,WAAW,EAAG;AAJL,KAAb;AAOA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBC,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKC,YAAL,GAAoB,KAAKA,YAAL,CAAkBD,IAAlB,CAAuB,IAAvB,CAApB;AACH;;AAEDD,EAAAA,YAAY,CAACG,KAAD,EAAO;AACf,SAAKC,QAAL,CACI;AACI,OAACD,KAAK,CAACE,MAAN,CAAaC,IAAd,GAAsBH,KAAK,CAACE,MAAN,CAAaE;AADvC,KADJ;AAKH;;AAEDL,EAAAA,YAAY,GAAE;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAX,IAAAA,qBAAqB,CAACiB,iCAAtB,CAAwD,KAAKb,KAAL,CAAWC,QAAnE,EAA4E,KAAKD,KAAL,CAAWE,QAAvF,EACCY,IADD,CAEI,MAAM;AACF,WAAKf,KAAL,CAAWgB,OAAX,CAAmBC,IAAnB,CAAyB,YAAW,KAAKhB,KAAL,CAAWC,QAAS,EAAxD;AACAL,MAAAA,qBAAqB,CAACqB,uBAAtB,CAA8C,KAAKjB,KAAL,CAAWC,QAAzD,EAAkE,KAAKD,KAAL,CAAWE,QAA7E;AACH,KALL,EAKOgB,KALP,CAMI,MAAM;AACF,WAAKT,QAAL,CAAc;AAACL,QAAAA,WAAW,EAAC;AAAb,OAAd;AACA,WAAKK,QAAL,CAAc;AAACN,QAAAA,cAAc,EAAC;AAAhB,OAAd;AACH,KATL;AAWH;;AAEDgB,EAAAA,MAAM,GAAE;AACJ,wBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKnB,KAAL,CAAWG,cAAX,iBAA6B;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADnC,6BAEe;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,KAAK,EAAE,KAAKH,KAAL,CAAWC,QAArD;AAA+D,MAAA,QAAQ,EAAE,KAAKI,YAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFf,6BAGe;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWE,QAAzD;AAAmE,MAAA,QAAQ,EAAE,KAAKG,YAAlF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHf,eAIK;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAoC,MAAA,OAAO,EAAE,KAAKE,YAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJL,CAFJ,CADH;AAWH;;AA3DiC;;AA8DtC,eAAeV,cAAf","sourcesContent":["import React, {Component} from 'react';\nimport AuthenticationService from './AuthenticationService';\n\nclass LoginComponent extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            username : 'harsh',\n            password : '',\n            hasLoginFailed  : false,\n            showSuccess : false\n        }\n\n        this.handleChange = this.handleChange.bind(this);\n        this.loginClicked = this.loginClicked.bind(this);\n    }\n\n    handleChange(event){\n        this.setState(\n            {\n                [event.target.name] : event.target.value \n            }\n        )\n    }\n\n    loginClicked(){\n        //harsh,harsh\n        // if(this.state.username===\"harsh\" && this.state.password===\"harsh\"){\n        //     this.props.history.push(`/welcome/${this.state.username}`)\n        //     AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password);\n        //     console.log(\"s\");\n        // }\n        // else{\n        //     console.log(\"f\");\n        //     this.setState({showSuccess:false})\n        //     this.setState({hasLoginFailed:true})\n        // }\n        AuthenticationService.executeBasicAuthenticationService(this.state.username,this.state.password)\n        .then(\n            () => {\n                this.props.history.push(`/welcome/${this.state.username}`)\n                AuthenticationService.registerSuccessfulLogin(this.state.username,this.state.password);\n            }).catch( \n            () => {\n                this.setState({showSuccess:false})\n                this.setState({hasLoginFailed:true})\n            }\n        )\n    }\n\n    render(){\n        return(\n           <div>\n               <h1>Login</h1>\n               <div className=\"container\">\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    Username: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n                    Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n           </div>\n        );\n    }\n}\n\nexport default LoginComponent;"]},"metadata":{},"sourceType":"module"}