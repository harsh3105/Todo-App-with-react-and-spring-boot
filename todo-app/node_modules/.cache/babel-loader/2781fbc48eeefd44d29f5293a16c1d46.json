{"ast":null,"code":"import axios from 'axios';\n\nclass AuthenticationService {\n  registerSuccessfulLogin(username, password) {\n    console.log(username);\n    sessionStorage.setItem('authenticatedUser', username);\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n\n    if (user === null) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getUsername() {\n    let user = sessionStorage.getItem('authenticatedUser');\n\n    if (user === null) {\n      return '';\n    }\n\n    return user;\n  }\n\n  setupAxiosInterceptors() {}\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/Users/harshgrover/Desktop/react-with-spring/todo-app/src/components/todo/AuthenticationService.js"],"names":["axios","AuthenticationService","registerSuccessfulLogin","username","password","console","log","sessionStorage","setItem","logout","removeItem","isUserLoggedIn","user","getItem","getUsername","setupAxiosInterceptors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AACA,MAAMC,qBAAN,CAA4B;AACxBC,EAAAA,uBAAuB,CAACC,QAAD,EAAUC,QAAV,EAAmB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAI,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA4CL,QAA5C;AACH;;AAEDM,EAAAA,MAAM,GAAE;AACJF,IAAAA,cAAc,CAACG,UAAf,CAA0B,mBAA1B;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;;AACA,QAAGD,IAAI,KAAG,IAAV,EAAe;AACX,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAEDE,EAAAA,WAAW,GAAE;AACT,QAAIF,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;;AACA,QAAGD,IAAI,KAAG,IAAV,EAAe;AACX,aAAO,EAAP;AACH;;AACD,WAAOA,IAAP;AACH;;AAEDG,EAAAA,sBAAsB,GAAE,CAEvB;;AA5BuB;;AA+B5B,eAAe,IAAId,qBAAJ,EAAf","sourcesContent":["import axios from 'axios'; \nclass AuthenticationService {\n    registerSuccessfulLogin(username,password){\n        console.log(username)\n        sessionStorage.setItem('authenticatedUser', username)\n    }\n\n    logout(){\n        sessionStorage.removeItem('authenticatedUser');\n    }\n\n    isUserLoggedIn(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null){\n            return false;\n        }\n        return true;\n    }\n\n    getUsername(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null){\n            return '';\n        }\n        return user;\n    }\n\n    setupAxiosInterceptors(){\n\n    }\n}\n\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}