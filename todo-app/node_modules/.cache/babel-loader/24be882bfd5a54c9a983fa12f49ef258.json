{"ast":null,"code":"import axios from 'axios';\n\nclass AuthenticationService {\n  registerSuccessfulLogin(username, password) {\n    console.log(username);\n    sessionStorage.setItem('authenticatedUser', username); //this.setupAxiosInterceptors()\n  }\n\n  logout() {\n    sessionStorage.removeItem('authenticatedUser');\n  }\n\n  isUserLoggedIn() {\n    let user = sessionStorage.getItem('authenticatedUser');\n\n    if (user === null) {\n      return false;\n    }\n\n    return true;\n  }\n\n  getUsername() {\n    let user = sessionStorage.getItem('authenticatedUser');\n\n    if (user === null) {\n      return '';\n    }\n\n    return user;\n  }\n\n  setupAxiosInterceptors() {\n    let username = 'harsh';\n    let password = 'harsh';\n    let basicAuthHeader = 'Basic' + window.btoa(username + ':' + password);\n    axios.interceptors.request.use(config => {\n      if (this.isUserLoggedIn()) {\n        config.headers.authorization = basicAuthHeader;\n        console.log(\"english\");\n      }\n\n      return config;\n    });\n  }\n\n}\n\nexport default new AuthenticationService();","map":{"version":3,"sources":["/Users/harshgrover/Desktop/react-with-spring/todo-app/src/components/todo/AuthenticationService.js"],"names":["axios","AuthenticationService","registerSuccessfulLogin","username","password","console","log","sessionStorage","setItem","logout","removeItem","isUserLoggedIn","user","getItem","getUsername","setupAxiosInterceptors","basicAuthHeader","window","btoa","interceptors","request","use","config","headers","authorization"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,qBAAN,CAA4B;AACxBC,EAAAA,uBAAuB,CAACC,QAAD,EAAUC,QAAV,EAAmB;AACtCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAI,IAAAA,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA4CL,QAA5C,EAFsC,CAGtC;AACH;;AAEDM,EAAAA,MAAM,GAAE;AACJF,IAAAA,cAAc,CAACG,UAAf,CAA0B,mBAA1B;AACH;;AAEDC,EAAAA,cAAc,GAAE;AACZ,QAAIC,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;;AACA,QAAGD,IAAI,KAAG,IAAV,EAAe;AACX,aAAO,KAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAEDE,EAAAA,WAAW,GAAE;AACT,QAAIF,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuB,mBAAvB,CAAX;;AACA,QAAGD,IAAI,KAAG,IAAV,EAAe;AACX,aAAO,EAAP;AACH;;AACD,WAAOA,IAAP;AACH;;AAEDG,EAAAA,sBAAsB,GAAE;AACpB,QAAIZ,QAAQ,GAAG,OAAf;AACA,QAAIC,QAAQ,GAAG,OAAf;AAEA,QAAIY,eAAe,GAAG,UAAUC,MAAM,CAACC,IAAP,CAAYf,QAAQ,GAAG,GAAX,GAAiBC,QAA7B,CAAhC;AAEAJ,IAAAA,KAAK,CAACmB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACKC,MAAD,IAAY;AACR,UAAG,KAAKX,cAAL,EAAH,EAAyB;AACzBW,QAAAA,MAAM,CAACC,OAAP,CAAeC,aAAf,GAA+BR,eAA/B;AACAX,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACC;;AACD,aAAOgB,MAAP;AACH,KAPL;AAUH;;AA3CuB;;AA8C5B,eAAe,IAAIrB,qBAAJ,EAAf","sourcesContent":["import axios from 'axios'; \n\nclass AuthenticationService {\n    registerSuccessfulLogin(username,password){\n        console.log(username)\n        sessionStorage.setItem('authenticatedUser', username)\n        //this.setupAxiosInterceptors()\n    }\n\n    logout(){\n        sessionStorage.removeItem('authenticatedUser');\n    }\n\n    isUserLoggedIn(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null){\n            return false;\n        }\n        return true;\n    }\n\n    getUsername(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user===null){\n            return '';\n        }\n        return user;\n    }\n\n    setupAxiosInterceptors(){\n        let username = 'harsh'\n        let password = 'harsh'\n\n        let basicAuthHeader = 'Basic' + window.btoa(username + ':' + password)\n\n        axios.interceptors.request.use(\n            (config) => {\n                if(this.isUserLoggedIn()){\n                config.headers.authorization = basicAuthHeader\n                console.log(\"english\")\n                }\n                return config\n            }\n        )\n\n    }\n}\n\nexport default new AuthenticationService()"]},"metadata":{},"sourceType":"module"}